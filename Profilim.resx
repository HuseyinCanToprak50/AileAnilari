<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_kaydet.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        6QAAAOkBVJIUSwAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAN7SURBVFhH1Zb7
        S1NhGMftz+jHICqYlC4vm26aYa55QeiCppmkZWGkVFQQ2AWKsMKsHzIiumC3WaTOeVmmJjZtmkujtmmX
        mdqcOXObLTtT+8Z7zJNuHjtnLqoHPpwfdt7n+bzPc3be4+f3L4WrRhxCPRJvJtRflOQUHIgqUBQdvVOt
        uKLigvJ2UVX+scPt+7J3GBU3LjdWKm7XHs6QXs/PEZ101qxe7F5vVlBqUTGlFmGaklMRkMXEoERRiwEz
        MGiZjcUCfOwHLANT9PcBBr2NXhMcHIyHD59CozEjPDwc2UnBJKeTUocmu9elg975jOLuAsNWwG7zhEjY
        RgCbbUrmNwKEiYlacYZ7fbL7pPkEyO64wEEAY9VBk45K/2tuAqHJvhQImU+gJgjDZUtgrxCE+FzAaLBj
        XXQ0AgMCoCxvYRWwli2Bo1KQz0lAcU/tUWg+Nm1MRqw8AQb9GDSaj6wC9ooVFzgJFJ6/BtP7SfT0cMQ0
        ibdvJtDZOYYH95sQJhZ7J1BVIKUF4mLjUFqqhVY7hLZWKydatUMoL2tFfFwChIGBOJIZwkGgVgpXcxrI
        ldxoKRVDvk6KNZGRXhEhkUAoFCJg1Uq8vvlrY6wCrgY5xnUHQDWsZ25uuyLC1sQgyKNWe0VaYhC0l2d3
        llWAqluL8ee5oB5HzVrga9gF1GJQ9TLQ1zkW+gp2gXrZ1AjqYzwW+RJWgbmegT/B/yUw3HEXZtMIzD0O
        r+gyjOJtpxGUOoy/gPNJisdrli96vQsdHWOwak7wFxht2s0kulWsQuH5q7w4e6YIr15RtMDgs0veC/T1
        fkdCfCIiJFJehInEePFidOEC3kIOMFJ8wQKkA0fzTmPXzj28SE3Zjvb2L9wF6MOoZTtzGM3swLa0TKyX
        xXJGFiNHQvwG6HROHgJu/1dvR9D74TtevvzGtH/BAmQEW5JS6U8tPkglUuh0PB5CNgHC8ePnsHtX7rxk
        ZeUiM2MvMn5y6OCpOTvwtSpwLgHPz3IuI+jrBUymSRgMUy8cNqYFvqlDMaJc/lNAUMgIOCuF8XaVAA6V
        P8Onxv3o6hr3oLtrHEajC/rXlMes2TA3XyAF8bl8KV2cFlD6pzECgN8im3LZu+kfCf2NeR6JvKW36SyT
        l2CrWN7NFJ8ZDpUg3a4SFBCsdenXTc/V7b5gsC6reDqvXeW/1b3uX40fjlcKKQ/TyIgAAAAASUVORK5C
        YII=
</value>
  </data>
</root>